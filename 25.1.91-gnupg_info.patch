--- origsrc/emacs-25.1.91/doc/emacs/package.texi	2016-07-24 06:20:57.000000000 -0400
+++ src/emacs-25.1.91/doc/emacs/package.texi	2017-01-06 17:55:42.114286500 -0500
@@ -214,7 +214,7 @@ package that is not signed.  If you use
 their packages, you can add them to the list @code{package-unsigned-archives}.
 
   For more information on cryptographic keys and signing,
-@pxref{Top,, Top, gnupg, The GNU Privacy Guard Manual}.
+@pxref{Top,, Top, gnupg1, The GNU Privacy Guard Manual}.
 Emacs comes with an interface to GNU Privacy Guard,
 @pxref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}.
 
--- origsrc/emacs-25.1.91/doc/lispref/package.texi	2016-06-29 14:52:12.000000000 -0400
+++ src/emacs-25.1.91/doc/lispref/package.texi	2017-01-06 17:55:42.119275200 -0500
@@ -376,6 +376,6 @@ your public key to verify the signatures
 
 A full explanation of these matters is outside the scope of this
 manual.  For more information on cryptographic keys and signing,
-@pxref{Top,, GnuPG, gnupg, The GNU Privacy Guard Manual}.  Emacs comes
+@pxref{Top,, GnuPG, gnupg1, The GNU Privacy Guard Manual}.  Emacs comes
 with an interface to GNU Privacy Guard, @pxref{Top,, EasyPG, epa,
 Emacs EasyPG Assistant Manual}.
--- origsrc/emacs-25.1.91/doc/misc/auth.texi	2016-06-29 14:52:09.000000000 -0400
+++ src/emacs-25.1.91/doc/misc/auth.texi	2017-01-06 17:59:09.400171900 -0500
@@ -540,9 +540,6 @@ Here are configurations depending on you
 @item No @tab No @tab No @tab You can't, without gpg-agent.
 @end multitable
 
-To set up gpg-agent, follow the instruction in GnuPG manual
-(@pxref{Invoking GPG-AGENT, , Invoking GPG-AGENT, gnupg}).
-
 To set up elisp passphrase cache, set
 @code{epa-file-cache-passphrase-for-symmetric-encryption}.
 
--- origsrc/emacs-25.1.91/doc/misc/epa.texi	2016-06-29 14:52:10.000000000 -0400
+++ src/emacs-25.1.91/doc/misc/epa.texi	2017-01-06 18:00:39.108886600 -0500
@@ -46,7 +46,7 @@ modify this GNU manual.''
 @top EasyPG Assistant user's manual
 
 EasyPG Assistant is an Emacs user interface to GNU Privacy Guard
-(GnuPG, @pxref{Top, , Top, gnupg, Using the GNU Privacy Guard}).
+(GnuPG, @pxref{Top, , Top, gnupg1, Using the GNU Privacy Guard}).
 
 EasyPG Assistant is a part of the package called EasyPG, an all-in-one
 GnuPG interface for Emacs.  EasyPG also contains the library interface
@@ -500,9 +500,6 @@ Here are configurations depending on you
 @item No @tab No @tab No @tab You can't, without gpg-agent.
 @end multitable
 
-To set up gpg-agent, follow the instruction in GnuPG manual.
-@pxref{Invoking GPG-AGENT, , Invoking GPG-AGENT, gnupg}.
-
 To set up elisp passphrase cache, set
 @code{epa-file-cache-passphrase-for-symmetric-encryption}.
 @xref{Encrypting/decrypting gpg files}.
--- origsrc/emacs-25.1.91/doc/misc/message.texi	2016-11-27 13:36:49.000000000 -0500
+++ src/emacs-25.1.91/doc/misc/message.texi	2017-01-06 18:07:19.328874600 -0500
@@ -1247,8 +1247,7 @@ eval `gpg-agent --daemon`
 This will invoke @command{gpg-agent} and set the environment variable
 @code{GPG_AGENT_INFO} to allow @command{gpg} to communicate with it.
 It might be good idea to put this command in your @file{.xsession} or
-@file{.bash_profile}.  @xref{Invoking GPG-AGENT, , , gnupg, Using the
-GNU Privacy Guard}.
+@file{.bash_profile}.
 
 Once your @command{gpg-agent} is set up, it will ask you for a
 passphrase as needed for @command{gpg}.  Under the X Window System,
@@ -1309,8 +1308,8 @@ your own key(s), several alternative sol
 @item
 Use the @code{encrypt-to} option in the file @file{gpg.conf} (for
 OpenPGP) or @file{gpgsm.conf} (for @acronym{S/MIME} with EasyPG).
-@xref{Invoking GPG, , , gnupg, Using the GNU Privacy Guard}, or
-@xref{Invoking GPGSM, , , gnupg, Using the GNU Privacy Guard}.
+@xref{Invoking GPG, , , gnupg1, Using the GNU Privacy Guard}, or
+@xref{Invoking GPGSM, , , gnupg1, Using the GNU Privacy Guard}.
 @item
 Include your own e-mail address (for which you created a key-pair)
 among the recipients.
--- origsrc/emacs-25.1.91/doc/misc/pgg.texi	2016-06-29 14:52:11.000000000 -0400
+++ src/emacs-25.1.91/doc/misc/pgg.texi	2017-01-06 18:03:55.772434600 -0500
@@ -103,8 +103,7 @@ program, which is distributed with versi
 This is a daemon to manage private keys independently from any
 protocol, and provides the most secure way to input and cache your
 passphrases (@pxref{Caching passphrase}).  By default, PGG will
-attempt to use @code{gpg-agent} if it is running.  @xref{Invoking
-GPG-AGENT,,,gnupg,Using the GNU Privacy Guard}.
+attempt to use @code{gpg-agent} if it is running.
 
 PGG also supports Pretty Good Privacy version 2 or version 5.
 
@@ -271,9 +270,6 @@ Window System, you can do this by puttin
 eval "$(gpg-agent --daemon)"
 @end smallexample
 
-For more details on invoking @code{gpg-agent}, @xref{Invoking
-GPG-AGENT,,,gnupg,Using the GNU Privacy Guard}.
-
 Whenever you perform a PGG operation that requires a GnuPG passphrase,
 GnuPG will contact @code{gpg-agent}, which prompts you for the
 passphrase.  Furthermore, @code{gpg-agent} ``caches'' the result, so
